OnTranslate
{
	_talk = reference0
	
	if reference1 == "" && reference2 == "" //If this is from the input box
	{ //send input box : no event (ref2) , no special flag (ref1)
		_talk = EVAL('"' + REPLACE(_talk,'"','""') + '"')
	}
	
	TOSTR(_talk)
}

OnAnchorSelect
{
	if "http://" _in_ reference0 || "https://" _in_ reference0; "\j[""%(reference0)""]"
}

OnKeyPress
{
	if reference0 == "f1"; "\![open,readme]"
	elseif reference0 == "t"; OnAiTalk
	elseif reference0 == "r"; OnLastTalk
}

OnSurfaceRestore
{
	"\1\s[-1]\0\s[0]"
}

OnWindowStateRestore
{
	OnSurfaceRestore
}

On_homeurl
{
	""
}

//Written by Zichqec https://ukagaka.zichqec.com/
/*
This function should work in any YAYA ghost. Just copy the whole function into your ghost somewhere, and it should be applied automatically!
If you're using AYA, you can just copy over the entire if check into your normal OnTranslate function, and leave out the other lines of code.


How to write your dialogues with this processor:

This is some dialogue. Pauses will be inserted after punctuation marks, so long as there is a space after them! If you want to control the timing manually...\w8\w8\w8\w8 you can do that too. \n\nMake sure you add a space before linebreaks if you want the previous sentence to have a pause after it.\![dummy-tag] You can also purposefully not add a space (or put another tag in the way) if you want to omit the pause.

With the default setup, this would be the output:

This is some dialogue.\w8 Pauses will be inserted after punctuation marks,\w4 so long as there is a space after them!\w8 If you want to control the timing manually...\w8\w8\w8\w8 you can do that too.\w8 \n\nMake sure you add a space before linebreaks if you want the previous sentence to have a pause after it.\![dummy-tag] You can also purposefully not add a space (or put another tag in the way) if you want to omit the pause.


Pause tags are added after punctuation marks, but ONLY if that punctuation mark is followed immediately by a space. You can use this to control whether or not a pause is added at any point in your dialogue.

You can also add \![no-autopause] anywhere in a script to prevent pauses from being added in any part of the script! This is useful for things like menus.
Be careful that you don't have a comma and space combination in your sakurascript tags! As long as you write them like \![raise,OnThing,Arg 1] and not \![raise, OnThing, Arg 1], you should be fine.

You can adjust this all how you like. I also included options to handle ellipsis separately.
You'll have to be a bit mindful of how you write your dialogues, but this can make it much easier/cleaner in general!

Note: you could also change this to only add autopause if you specify a \![autopause] tag in the script, just by changing the if check! You could even get a bit more involved, and make it automatically check for certain events (like aitalk) and apply pauses to those but nowhere else. Whatever you need to make it useful but not a nuisance to you!
*/

OnTranslateInternal.AutoPause
{
	_talk = _argv[0]
	
	if "\![no-autopause]" !_in_ _talk
	{
		/*
		//Additional options if you want ellipsis to have little pauses between each dot. Personally, I think I want to do that manually, for when I want a particular flavor. If you want this, just uncomment it.
		
		_talk = REPLACE(_talk,"... ",".\w4.\w4.\w8\w8 ") //Ellipsis
		_talk = REPLACE(_talk,"...? ",".\w4.\w4.\w4?\w8\w8 ") //Question mark + ellipsis
		_talk = REPLACE(_talk,"...! ",".\w4.\w4.\w4!\w8\w8 ") //Exclamation point + ellipsis
		*/
		
		_talk = REPLACE(_talk,"\n\n ","\n\n\w8\w8\w8\w8") //Linebreak
		_talk = REPLACE(_talk,", ",",\w4 ") //Comma
		_talk = REPLACE(_talk,". ",".\w8\w8\w8 ") //Period
		_talk = REPLACE(_talk,"? ","?\w8\w8\w8 ") //Question mark
		_talk = REPLACE(_talk,"! ","!\w8\w8\w8 ") //Exclamation point
		_talk = REPLACE(_talk,"; ",";\w8 ") //Semicolon
		//_talk = REPLACE(_talk,"- ","-\w8 ") //Dash - This one seems to happen a lot when I don't want it, so I am commenting it out
	}
	
	_talk
}

OnUserInputCancel
{
	if reference0 == "OnFirstConvo.Garden"
	{
		"\![raise,OnFirstConvo.Garden]"
	}
	elseif reference0 == "OnFirstConvo.HerName"
	{
		"\![raise,OnFirstConvo.HerName]"
	}
	elseif reference0 == "OnFirstConvo.YourName"
	{
		"\![raise,OnFirstConvo.YourName]"
	}
	elseif reference0 == "OnGuessHerName"
	{
		"\![raise,OnGuessHerName]"
	}
	elseif reference0 == "OnGuessYourName"
	{
		"\![raise,OnGuessYourName]"
	}
}

//—————————————————————————————— Right click menu links ——————————————————————————————

//Takes an array of alternating names and urls, and formats them for use with the right click menu
FormatLinks : all
{
	for _i = 0; _i < ARRAYSIZE(_argv); _i++
	{
		_argv[_i] //Add the link/title
		//Alternate between adding %ASC(1) or %ASC(2)
		if _i % 2 == 1; "%ASC(2)"
		else; "%ASC(1)"
	}
}

On_sakura.recommendsites
{
	FormatLinks(recommendsites_sakura)
}

//These are the websites linked in the top option of the sakura's right click menu. The format is simple; write the label of the link on the left followed by a semicolon, and then on the right, the url to link to. These should be separate strings.
recommendsites_sakura : array
{
	"Link label";	"https://link.example.com/link/to/whatever/here/"
}

On_sakura.portalsites 
{
	FormatLinks(portalsites_sakura)
}

//These are the websites linked in the second option of the sakura's right click menu. Same as above
portalsites_sakura : array
{
	"Another link label";	"https://link.example.com/link/to/whatever/here/again/"
	"A third link label";	"https://link.example.com/link/to/whatever/a/third/time/you/can/add/as/many/as/you/want/"
}

On_kero.recommendsites
{
	FormatLinks(recommendsites_kero)
}

//These are the websites linked in the first option of the kero's right click menu. Same as above
recommendsites_kero : array
{
	"These labels can be anything you want";	"https://link.example.com/link/to/whatever/here/once/more/"
}


//—————————————————————————————— User pronoun related ——————————————————————————————

they
{
	if SHIORI3FW.UserSex == "male"; "he"
	elseif SHIORI3FW.UserSex == "female"; "she"
	else; "they"
}

them
{
	if SHIORI3FW.UserSex == "male"; "him"
	elseif SHIORI3FW.UserSex == "female"; "her"
	else; "them"
}

their
{
	if SHIORI3FW.UserSex == "male"; "his"
	elseif SHIORI3FW.UserSex == "female"; "her"
	else; "their"
}

theirs
{
	if SHIORI3FW.UserSex == "male"; "his"
	elseif SHIORI3FW.UserSex == "female"; "hers"
	else; "theirs"
}

themself
{
	if SHIORI3FW.UserSex == "male"; "himself"
	elseif SHIORI3FW.UserSex == "female"; "herself"
	else; "themself"
}

//%(they) %(p('are','is'))
//You can change the name of this function if you want! I kept it short so it's fast to type
p
{
	if SHIORI3FW.UserSex == "undef"; _argv[0] //they are
	else; _argv[1] //he is/she is
}

/*

An example of the above setup:
"%(they) %(p('were','was')) looking for that earlier, I'll ask if %(they)'%(p('ve','s')) found it."

If using they, the %(p) functions will return the first word specified, resulting in:
"they were looking for that earlier, I'll ask if they've found it."

If not using they, for example if using she, it will return the second specified word instead, resulting in:
"she was looking for that earlier, I'll ask if she's found it."

With this function, you can quickly customize words that need to change based on whether it should be singular or plural. Just remember; the %(p) function is set up so that the first word you specify matches with the 'they' labels used on the pronoun functions. You can always switch that around if you like, too.

*/

//This just makes %(username) match with the username determined by the SSP prefs, rather than having to use the %username environment variable which is *not* the same and which you can't do things like TOUPPER to.
//If you want to have the user be able to set a nickname or something, you may want to change username to a variable instead and get rid of this!
username
{
	SHIORI3FW.UserName
}